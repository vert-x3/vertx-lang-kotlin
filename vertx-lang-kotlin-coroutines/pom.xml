<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>vertx-lang-kotlin-parent</artifactId>
    <groupId>io.vertx</groupId>
    <version>3.6.0-SNAPSHOT</version>
  </parent>

  <properties>
    <!-- Files are copied there as it contains the examples -->
    <asciidoc.dir>${project.build.directory}/asciidoc</asciidoc.dir>
    <atomicfu.version>0.11.9</atomicfu.version>
  </properties>

  <artifactId>vertx-lang-kotlin-coroutines</artifactId>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-core</artifactId>
      <version>${kotlin.coroutines.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>atomicfu</artifactId>
      <version>${atomicfu.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java2</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Needed otherwise there is a FlowableSubscriber CNFE in Kotlin tests -->
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
      <version>2.1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-rx2</artifactId>
      <version>${kotlin.coroutines.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>

      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <!-- version needed because of OpenJDK 11 : remove when parent pom is upgraded -->
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <source>${project.basedir}/src/main/java</source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- compile Kotlin files to staging directory -->
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <configuration>
          <experimentalCoroutines>enable</experimentalCoroutines>
        </configuration>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}/classes-pre-atomicfu</output>
              <!-- "VH" to use Java 9 VarHandle, "BOTH" to produce multi-version code -->
              <variant>FU</variant>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- transform classes with AtomicFU plugin -->
      <plugin>
        <groupId>org.jetbrains.kotlinx</groupId>
        <artifactId>atomicfu-maven-plugin</artifactId>
        <version>${atomicfu.version}</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <input>${project.build.directory}/classes-pre-atomicfu</input>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>examples/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-docs</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>true</attach>
              <descriptors>
                <descriptor>${basedir}/src/main/assembly/docs.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>assemble-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>true</attach>
              <descriptors>
                <descriptor>${basedir}/src/main/assembly/javadocs.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>default-clean</id>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.basedir}/src/main/kotlin</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-asciidoc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/asciidoc/kotlin</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/asciidoc</directory>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/java/examples</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Run it to preview docs : mvn asciidoctor:process-asciidoc -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <configuration>
          <attributes>
            <toc>left</toc>
          </attributes>
          <sourceDirectory>${project.build.directory}/asciidoc</sourceDirectory>
          <outputDirectory>${project.build.directory}/html</outputDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
